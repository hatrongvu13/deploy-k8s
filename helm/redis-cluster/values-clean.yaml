image:
  registry: docker.io
  repository: bitnami/redis
  tag: 5.0.5-debian-9-r36
  pullPolicy: IfNotPresent
cluster:
  enabled: true
  slaveCount: 3

sentinel:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/redis-sentinel
    tag: 5.0.5-debian-9-r37
    pullPolicy: IfNotPresent
  masterSet: mymaster
  initialCheckTimeout: 5
  quorum: 2
  downAfterMilliseconds: 60000
  failoverTimeout: 18000
  parallelSyncs: 1
  port: 26379
  configmap:
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  service:
    type: ClusterIP
    sentinelPort: 26379
    redisPort: 6379
    annotations: {}
    loadBalancerIP:
clusterDomain: cluster.local

networkPolicy:
  enabled: false
serviceAccount:
  create: false
  name:

rbac:
  create: false

  role:
    rules: []

securityContext:
  enabled: true
  fsGroup: 2000
  runAsUser: 1000

usePassword: true
password: password
usePasswordFile: false

persistence: {}
redisPort: 6379

master:
  command: "/run.sh"
  configmap:
  extraFlags: []
  disableCommands:
  - FLUSHDB
  - FLUSHALL

  podLabels: {}
  podAnnotations: {}

  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5

  affinity: {}

  service:
    type: NodePort
    port: 6660

    annotations: {}
    loadBalancerIP:

  persistence:
    enabled: true
    path: /data
    subPath: ""
    storageClass: "manual"
    accessModes:
    - ReadWriteOnce
    size: 8Gi

  statefulset:
    updateStrategy: RollingUpdate
slave:
  service:
    type: ClusterIP
    port: 6379
    annotations: {}
    loadBalancerIP:

  port: 6379
  command: "/run.sh"
  configmap:
  extraFlags: []
  disableCommands:
  - FLUSHDB
  - FLUSHALL

  affinity: {}

  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 5

  podLabels: {}
  podAnnotations: {}

  persistence:
    enabled: true
    path: /data
    subPath: ""
    storageClass: "manual"
    accessModes:
    - ReadWriteOnce
    size: 8Gi

  statefulset:
    updateStrategy: RollingUpdate

metrics:
  enabled: false

  image:
    registry: docker.io
    repository: bitnami/redis-exporter
    tag: 1.0.3-debian-9-r0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    annotations: {}
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"

  serviceMonitor:
    enabled: false
    selector:
      prometheus: kube-prometheus

volumePermissions:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: latest
    pullPolicy: Always
  resources: {}
configmap: |-
  # Enable AOF https://redis.io/topics/persistence#append-only-file
  appendonly yes
  # Disable RDB persistence, AOF persistence already enabled.
  save ""
  tcp-keepalive 0

sysctlImage:
  enabled: true
  command:
    - /bin/sh
    - -c
    - |-
      install_packages systemd
      sysctl -w net.core.somaxconn=10000
      echo never > /host-sys/kernel/mm/transparent_hugepage/enabled
  registry: docker.io
  repository: bitnami/minideb
  tag: latest
  pullPolicy: Always
  mountHostSys: true
  resources: {}
  